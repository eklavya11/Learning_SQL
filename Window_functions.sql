SELECT * FROM EMPLOYEE

--MAX SALARY BY DEPT
SELECT DEPT_NAME, MAX(SALARY) FROM EMPLOYEE 
GROUP BY DEPT_NAME

--OVER()
--MAX SALARY AMONG ALL EMPLOYEES SHOWN FOR ALL ROWS
SELECT E.*, MAX(SALARY)  
OVER() AS MAX_SALARY FROM EMPLOYEE E


--MAX SALARY AMONG ALL EMPLOYEES SHOWN FOR ALL 
--ROWS PARTITIONED BY DEPT
SELECT E.*, MAX(SALARY)  
OVER(PARTITION BY DEPT_NAME) AS MAX_SALARY FROM EMPLOYEE E

--ROW_NUMBER,RANK,DENSE_RANK,LEAD,LAG

--row number of employees in each department 
--sorted by emp_id
SELECT E.*, ROW_NUMBER() 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID) RN 
FROM EMPLOYEE E

--fetch first 2 employees from each department 
--to join the company based on empi_id

SELECT * FROM (SELECT E.*, ROW_NUMBER() 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID) RN 
FROM EMPLOYEE E) A WHERE RN <=2


----RANK Of Top 3 employees in each department
-- based on salary
SELECT * FROM(
SELECT E.*,RANK() 
OVER(PARTITION BY DEPT_NAME ORDER BY SALARY DESC) RNK
FROM EMPLOYEE E) A WHERE A.RNK <4

--DENSE_RANK
SELECT * FROM(
SELECT E.*,DENSE_RANK() 
OVER(PARTITION BY DEPT_NAME ORDER BY SALARY DESC) D_RNK
FROM EMPLOYEE E) A WHERE A.D_RNK <4

--Lead AND LAG
--gives the salary of previous record
SELECT E.*,LAG(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID)PREVIOUS_SAL
FROM EMPLOYEE E

SELECT E.*,LEAD(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID)NEXT_SAL
FROM EMPLOYEE E

--gives the salary of previous record
SELECT E.*,LAG(SALARY,2,0) -- gives salary of 2 records previous to current record otherwise `null` 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID)PREVIOUS_SAL
FROM EMPLOYEE E

--Higher or Lower

SELECT E.*,LAG(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID)PREVIOUS_SAL,
CASE 
WHEN E.SALARY>LAG(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID) THEN 'HIGHER SALARY THAN PREVIOUS'
WHEN E.SALARY<LAG(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID) THEN 'LOWER SALARY THAN PREVIOUS'
WHEN E.SALARY=LAG(SALARY) 
OVER(PARTITION BY DEPT_NAME ORDER BY EMP_ID) THEN 'SAME AS PREVIOUS'
ELSE 'NOT FOUND'
END AS COMPARISON
FROM EMPLOYEE E


---Practice

SELECT e.*,SUM(SALARY) -- running total of salary
OVER(order by emp_id) SUM_SAL
FROM EMPLOYEE E 



 